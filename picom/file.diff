2,40d1
< #          Animations           #
< #################################
< # requires https://github.com/jonaburg/picom
< # (These are also the default values)
< transition-length = 300
< transition-pow-x = 0.1
< transition-pow-y = 0.1
< transition-pow-w = 0.1
< transition-pow-h = 0.1
< size-transition = true
< 
< 
< #################################
< #             Corners           #
< #################################
< # requires: https://github.com/sdhand/compton or https://github.com/jonaburg/picom
< corner-radius = 10.0;
< rounded-corners-exclude = [
<   #"window_type = 'normal'",
<   "class_g = 'awesome'",
<   "class_g = 'URxvt'",
<   "class_g = 'XTerm'",
<   "class_g = 'kitty'",
<   "class_g = 'Alacritty'",
<   "class_g = 'Polybar'",
<   "class_g = 'code-oss'",
<   #"class_g = 'TelegramDesktop'",
<   "class_g = 'firefox'",
<   "class_g = 'dwm'",
<   "class_g = 'dmenu'",
<   "class_g = 'Thunderbird'"
< ];
< round-borders = 1;
< round-borders-exclude = [
<   #"class_g = 'TelegramDesktop'",
<   "class_g = 'dmenu'",
< ];
< 
< #################################
45,46c6,7
< # Enabled client-side shadows on windows. Note desktop windows 
< # (windows with '_NET_WM_WINDOW_TYPE_DESKTOP') never get shadow, 
---
> # Enabled client-side shadows on windows. Note desktop windows
> # (windows with '_NET_WM_WINDOW_TYPE_DESKTOP') never get shadow,
50c11
< shadow = false;
---
> shadow = true;
67,76d27
< # Avoid drawing shadows on dock/panel windows. This option is deprecated,
< # you should use the *wintypes* option in your config file instead.
< #
< # no-dock-shadow = false
< 
< # Don't draw shadows on drag-and-drop windows. This option is deprecated, 
< # you should use the *wintypes* option in your config file instead.
< #
< # no-dnd-shadow = false
< 
86,95c37,38
< # Do not paint shadows on shaped windows. Note shaped windows 
< # here means windows setting its shape through X Shape extension. 
< # Those using ARGB background is beyond our control. 
< # Deprecated, use 
< #   shadow-exclude = 'bounding_shaped'
< # or 
< #   shadow-exclude = 'bounding_shaped && !rounded_corners'
< # instead.
< #
< # shadow-ignore-shaped = ''
---
> # Hex string color value of shadow (#000000 - #FFFFFF, defaults to #000000). This option will override options set shadow-(red/green/blue)
> # shadow-color = "#000000"
108,109d50
<   "class_g = 'slop'",
<   "class_g = 'Polybar'",
112a54,56
> # Specify a list of conditions of windows that should have no shadow painted over, such as a dock window.
> # clip-shadow-above = []
> 
114c58
< # be painted in, such as a dock window region. Use 
---
> # be painted in, such as a dock window region. Use
118c62
< # shadow-exclude-reg = "" 
---
> # shadow-exclude-reg = ""
146,149c90
< # don't need this, we disable fading for all normal windows with wintypes: {}
< fade-exclude = [
<   "class_g = 'slop'"   # maim
< ]
---
> # fade-exclude = []
171,180c112
< # Default opacity for dropdown menus and popup menus. (0.0 - 1.0, defaults to 1.0)
< # menu-opacity = 1.0 
< # menu-opacity is depreciated use dropdown-menu and popup-menu instead.
< 
< #If using these 2 below change their values in line 510 & 511 aswell
< popup_menu = { opacity = 0.8; }
< dropdown_menu = { opacity = 0.8; }
< 
< 
< # Let inactive opacity set by -i override the '_NET_WM_OPACITY' values of windows.
---
> # Let inactive opacity set by -i override the '_NET_WM_WINDOW_OPACITY' values of windows.
185c117
< active-opacity = 1.0;
---
> # active-opacity = 1.0
190c122
< # Specify a list of conditions of windows that should always be considered focused.
---
> # Specify a list of conditions of windows that should never be considered focused.
192,196c124
< focus-exclude = [
<   "class_g = 'Cairo-clock'",
<   "class_g = 'Bar'",                    # lemonbar
<   "class_g = 'slop'"                    # maim
< ];
---
> focus-exclude = [ "class_g = 'Cairo-clock'" ];
201,203c129,131
< # Specify a list of opacity rules, in the format `PERCENT:PATTERN`, 
< # like `50:name *= "Firefox"`. picom-trans is recommended over this. 
< # Note we don't make any guarantee about possible conflicts with other 
---
> # Specify a list of opacity rules, in the format `PERCENT:PATTERN`,
> # like `50:name *= "Firefox"`. picom-trans is recommended over this.
> # Note we don't make any guarantee about possible conflicts with other
208,223c136,155
< # opacity-rule = []
< opacity-rule = [
<   "80:class_g     = 'Bar'",             # lemonbar
<   "100:class_g    = 'slop'",            # maim
<   "100:class_g    = 'XTerm'",
<   "100:class_g    = 'URxvt'",
<   "100:class_g    = 'kitty'",
<   "100:class_g    = 'Alacritty'",
<   "80:class_g     = 'Polybar'",
<   "100:class_g    = 'code-oss'",
<   "100:class_g    = 'Meld'",
<   "70:class_g    = 'dwm'",
<   "70:class_g     = 'TelegramDesktop'",
<   "90:class_g     = 'Joplin'",
<   "100:class_g    = 'firefox'",
<   "100:class_g    = 'Thunderbird'"
---
>  opacity-rule = [
>    #"80:class_g = 'kitty'",
>    "95:class_g ='Polybar'",
>    "85:class_g= 'dwm'"
>  ]
> 
> 
> #################################
> #           Corners             #
> #################################
> 
> # Sets the radius of rounded window corners. When > 0, the compositor will
> # round the corners of windows. Does not interact well with
> # `transparent-clipping`.
> corner-radius = 0
> 
> # Exclude conditions for rounded corners.
> rounded-corners-exclude = [
>   "window_type = 'dock'",
>   "window_type = 'desktop'"
233,234c165,166
< # blur-method = 
< # blur-size = 12
---
>  blur-method = "dual_kawase"
>  blur-size = 12
236a169,170
> #
> blur-strength = 5
238,239c172,173
< # Blur background of semi-transparent / ARGB windows. 
< # Bad in performance, with driver-dependent behavior. 
---
> # Blur background of semi-transparent / ARGB windows.
> # Bad in performance, with driver-dependent behavior.
242c176
< # blur-background = true;
---
>  blur-background = true
244c178
< # Blur background of windows when the window frame is not opaque. 
---
> # Blur background of windows when the window frame is not opaque.
246c180
< #    blur-background 
---
> #    blur-background
249c183
< # blur-background-frame = false;
---
> # blur-background-frame = false
253c187
< # blur-background-fixed = false;
---
> # blur-background-fixed = false
260,261c194,195
< # blur-kern = ''
< # blur-kern = "3x3box";
---
> # blur-kern = ""
> blur-kern = "3x3box";
263,274d196
< blur: {
<   # requires: https://github.com/ibhagwan/picom
<   method = "kawase";
<   #method = "kernel";
<   strength = 7;
<   # deviation = 1.0;
<   # kernel = "11x11gaussian";
<   background = false;
<   background-frame = false;
<   background-fixed = false;
<   kern = "3x3box";
< }
276a199
> # blur-background-exclude = []
278,285c201,202
<   #"window_type = 'dock'",
<   #"window_type = 'desktop'",
<   #"class_g = 'URxvt'",
<   #
<   # prevents picom from blurring the background
<   # when taking selection screenshot with `main`
<   # https://github.com/naelstrof/maim/issues/130
<   "class_g = 'slop'",
---
>   "window_type = 'dock'",
>   "window_type = 'desktop'",
289d205
< 
293a210,212
> # Enable remote control via D-Bus. See the man page for more details.
> # dbus = true
> 
300,301c219
< experimental-backends = true;
< backend = "glx";
---
>  backend = "glx"
304d221
< 
307c224
< vsync = true
---
> vsync = true;
312c229
< # Try to detect WM windows (a non-override-redirect window with no 
---
> # Try to detect WM windows (a non-override-redirect window with no
322c239
< # Try to detect windows with rounded corners and don't consider them 
---
> # Try to detect windows with rounded corners and don't consider them
328,329c245,246
< # Detect '_NET_WM_OPACITY' on client windows, useful for window managers
< # not passing '_NET_WM_OPACITY' of client windows to frame windows.
---
> # Detect '_NET_WM_WINDOW_OPACITY' on client windows, useful for window managers
> # not passing '_NET_WM_WINDOW_OPACITY' of client windows to frame windows.
334,349c251,252
< # Specify refresh rate of the screen. If not specified or 0, picom will 
< # try detecting this with X RandR extension.
< #
< # refresh-rate = 60
< refresh-rate = 0
< 
< # Limit picom to repaint at most once every 1 / 'refresh_rate' second to 
< # boost performance. This should not be used with 
< #   vsync drm/opengl/opengl-oml
< # as they essentially does sw-opti's job already, 
< # unless you wish to specify a lower refresh rate than the actual value.
< #
< # sw-opti = 
< 
< # Use EWMH '_NET_ACTIVE_WINDOW' to determine currently focused window, 
< # rather than listening to 'FocusIn'/'FocusOut' event. Might have more accuracy, 
---
> # Use EWMH '_NET_ACTIVE_WINDOW' to determine currently focused window,
> # rather than listening to 'FocusIn'/'FocusOut' event. Might have more accuracy,
354,356c257,259
< # Unredirect all windows if a full-screen opaque window is detected, 
< # to maximize performance for full-screen windows. Known to cause flickering 
< # when redirecting/unredirecting windows. paint-on-overlay may make the flickering less obvious.
---
> # Unredirect all windows if a full-screen opaque window is detected,
> # to maximize performance for full-screen windows. Known to cause flickering
> # when redirecting/unredirecting windows.
366c269
< # Use 'WM_TRANSIENT_FOR' to group windows, and consider windows 
---
> # Use 'WM_TRANSIENT_FOR' to group windows, and consider windows
370c273
< detect-transient = true
---
> detect-transient = true;
372,374c275,278
< # Use 'WM_CLIENT_LEADER' to group windows, and consider windows in the same 
< # group focused at the same time. 'WM_TRANSIENT_FOR' has higher priority if 
< # detect-transient is enabled, too.
---
> # Use 'WM_CLIENT_LEADER' to group windows, and consider windows in the same
> # group focused at the same time. This usually means windows from the same application
> # will be considered focused or unfocused at the same time.
> # 'WM_TRANSIENT_FOR' has higher priority if detect-transient is enabled, too.
377d280
< detect-client-leader = true
379,387c282,290
< # Resize damaged region by a specific number of pixels. 
< # A positive value enlarges it while a negative one shrinks it. 
< # If the value is positive, those additional pixels will not be actually painted 
< # to screen, only used in blur calculation, and such. (Due to technical limitations, 
< # with use-damage, those pixels will still be incorrectly painted to screen.) 
< # Primarily used to fix the line corruption issues of blur, 
< # in which case you should use the blur radius value here 
< # (e.g. with a 3x3 kernel, you should use `--resize-damage 1`, 
< # with a 5x5 one you use `--resize-damage 2`, and so on). 
---
> # Resize damaged region by a specific number of pixels.
> # A positive value enlarges it while a negative one shrinks it.
> # If the value is positive, those additional pixels will not be actually painted
> # to screen, only used in blur calculation, and such. (Due to technical limitations,
> # with use-damage, those pixels will still be incorrectly painted to screen.)
> # Primarily used to fix the line corruption issues of blur,
> # in which case you should use the blur radius value here
> # (e.g. with a 3x3 kernel, you should use `--resize-damage 1`,
> # with a 5x5 one you use `--resize-damage 2`, and so on).
392c295
< # Specify a list of conditions of windows that should be painted with inverted color. 
---
> # Specify a list of conditions of windows that should be painted with inverted color.
397,399c300,302
< # GLX backend: Avoid using stencil buffer, useful if you don't have a stencil buffer. 
< # Might cause incorrect opacity when rendering transparent content (but never 
< # practically happened) and may not work with blur-background. 
---
> # GLX backend: Avoid using stencil buffer, useful if you don't have a stencil buffer.
> # Might cause incorrect opacity when rendering transparent content (but never
> # practically happened) and may not work with blur-background.
404,405c307,308
< # GLX backend: Avoid rebinding pixmap on window damage. 
< # Probably could improve performance on rapid window content changes, 
---
> # GLX backend: Avoid rebinding pixmap on window damage.
> # Probably could improve performance on rapid window content changes,
411c314
< # Disable the use of damage information. 
---
> # Disable the use of damage information.
417,419c320
< #use-damage = true (Causing Weird Black semi opaque rectangles when terminal is opened)
< #Changing use-damage to false fixes the problem
< use-damage = false
---
> use-damage = true;
421,422c322,323
< # Use X Sync fence to sync clients' draw calls, to make sure all draw 
< # calls are finished before picom starts drawing. Needed on nvidia-drivers 
---
> # Use X Sync fence to sync clients' draw calls, to make sure all draw
> # calls are finished before picom starts drawing. Needed on nvidia-drivers
427,428c328,329
< # GLX backend: Use specified GLSL fragment shader for rendering window contents. 
< # See `compton-default-fshader-win.glsl` and `compton-fake-transparency-fshader-win.glsl` 
---
> # GLX backend: Use specified GLSL fragment shader for rendering window contents.
> # See `compton-default-fshader-win.glsl` and `compton-fake-transparency-fshader-win.glsl`
431c332
< # glx-fshader-win = ''
---
> # glx-fshader-win = ""
433c334
< # Force all windows to be painted with blending. Useful if you 
---
> # Force all windows to be painted with blending. Useful if you
438c339
< # Do not use EWMH to detect fullscreen windows. 
---
> # Do not use EWMH to detect fullscreen windows.
443,445c344,346
< # Dimming bright windows so their brightness doesn't exceed this set value. 
< # Brightness of a window is estimated by averaging all pixels in the window, 
< # so this could comes with a performance hit. 
---
> # Dimming bright windows so their brightness doesn't exceed this set value.
> # Brightness of a window is estimated by averaging all pixels in the window,
> # so this could comes with a performance hit.
457,458c358,359
< # in increasing level of importance. Case doesn't matter. 
< # If using the "TRACE" log level, it's better to log into a file 
---
> # in increasing level of importance. Case doesn't matter.
> # If using the "TRACE" log level, it's better to log into a file
462c363
< log-level = "info";
---
> log-level = "warn";
465,467c366,368
< # If *--log-file* is never specified, logs will be written to stderr. 
< # Otherwise, logs will to written to the given file, though some of the early 
< # logs might still be written to the stderr. 
---
> # If *--log-file* is never specified, logs will be written to stderr.
> # Otherwise, logs will to written to the given file, though some of the early
> # logs might still be written to the stderr.
470c371
< # log-file = '/path/to/your/log/file'
---
> # log-file = "/path/to/your/log/file"
476c377
< # write-pid-path = '/path/to/your/log/file'
---
> # write-pid-path = "/path/to/your/log/file"
479,482c380,383
< # 
< # 'WINDOW_TYPE' is one of the 15 window types defined in EWMH standard: 
< #     "unknown", "desktop", "dock", "toolbar", "menu", "utility", 
< #     "splash", "dialog", "normal", "dropdown_menu", "popup_menu", 
---
> #
> # 'WINDOW_TYPE' is one of the 15 window types defined in EWMH standard:
> #     "unknown", "desktop", "dock", "toolbar", "menu", "utility",
> #     "splash", "dialog", "normal", "dropdown_menu", "popup_menu",
484c385
< # 
---
> #
486c387
< # 
---
> #
489c390
< # 
---
> #
492c393
< # 
---
> #
494c395
< #     Controls whether the window of this type is to be always considered focused. 
---
> #     Controls whether the window of this type is to be always considered focused.
496c397
< # 
---
> #
498,499c399,400
< #     Controls whether shadow is drawn under the parts of the window that you 
< #     normally won't be able to see. Useful when the window has parts of it 
---
> #     Controls whether shadow is drawn under the parts of the window that you
> #     normally won't be able to see. Useful when the window has parts of it
501c402,406
< # 
---
> #
> #   clip-shadow-above:::
> #     Controls wether shadows that would have been drawn above the window should
> #     be clipped. Useful for dock windows that should have no shadow painted on top.
> #
503c408
< #     Controls whether this type of windows should cause screen to become 
---
> #     Controls whether this type of windows should cause screen to become
505c410
< #     set, and doesn't want certain window to cause unnecessary screen redirection, 
---
> #     set, and doesn't want certain window to cause unnecessary screen redirection,
510d414
<   normal = { fade = false; shadow = false; }
512c416
<   dock = { shadow = false; }
---
>   dock = { shadow = false; clip-shadow-above = true; }
